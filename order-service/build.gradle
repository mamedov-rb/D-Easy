buildscript {
    ext {
        springBootVersion = '2.2.5.RELEASE'
        springCloudVersion = "Hoxton.SR1"
        mapStructVersion = "1.2.0.Final"
    }
    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}'
    }
}

plugins {
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'groovy'
    id 'maven-publish'
}

group = 'com.rmamedov.deasy.orderservice'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenLocal()
    mavenCentral()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
//    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
    implementation 'org.springframework.kafka:spring-kafka:2.4.3.RELEASE'
    implementation  'org.springframework.kafka:spring-kafka-test:2.4.3.RELEASE'
    implementation 'org.hibernate:hibernate-validator:6.1.0.Final'

    testImplementation 'io.projectreactor:reactor-test'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    implementation'org.hibernate:hibernate-validator:6.1.0.Final'
    implementation "org.mapstruct:mapstruct-jdk8:${mapStructVersion}"
    compileOnly "org.mapstruct:mapstruct-processor:${mapStructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapStructVersion}"
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
}

test {
    useJUnitPlatform()
}
