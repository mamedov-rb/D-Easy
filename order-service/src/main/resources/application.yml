
server.port: 8000

spring:
  application.name: order-service
  data.mongodb:
      host: localhost:27017
      database: order-db
      username: order-user
      password: order-password
  kafka:
    consumer:
      bootstrap-servers: localhost:9092
      group-id: group_id
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
    producer:
      bootstrap-servers: ${spring.kafka.consumer.bootstrap-servers}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    topics:
      in-progress-orders-topic:
        name: unchecked-orders-topic
        partitions: 1
        replicas: 1
      checked-addresses-topic:
        name: checked-addresses-topic
        partitions: 1
        replicas: 1
      checked-couriers-topic:
        name: checked-couriers-topic
        partitions: 1
        replicas: 1
      checked-menu-orders-topic:
        name: checked-menu-orders-topic
        partitions: 1
        replicas: 1

#eureka:
#  instance.preferIpAddress: true
#  client:
#    registerWithEureka: true
#    fetchRegistry: true
#    serviceUrl:
#      defaultZone: http://discovery-service:8761/eureka
