version: "3.3"

services:

  mongo:
    image: "mongo:latest"
    container_name: mongo-container
    environment:
      MONGO_INITDB_DATABASE: order-db
      MONGO_INITDB_ROOT_USERNAME: order-user
      MONGO_INITDB_ROOT_PASSWORD: order-password
    volumes:
      - ~/projects/d-easy/db:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - "27017:27017"
    networks:
      - db
        
  zookeeper-server:
    image: "bitnami/zookeeper:latest"
    container_name: zookeeper-container
    restart: always
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - cloud-kafka-net  

  kafka-server:
    image: "bitnami/kafka:latest"
    container_name: kafka-container
    restart: always
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper-server:2181
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper-server
    networks:
      - cloud-kafka-net  
      
  discovery-service:
    build: ./discovery-service
    restart: always
    image: discovery-service-image
    container_name: discovery-service-container
    ports:
      - "8761:8761"
    networks:
      - cloud-service-net

  zuul-service:
    build: getway-service
    restart: always
    image: zuul-service-image
    container_name: zuul-service-container
    ports:
      - "8762:8762"        
    depends_on:
      - discovery-service
    entrypoint: ["/bin/sh"]
    command: ["-c", "/app/wait-for.sh discovery-service:8761 && java -jar -Dspring.profiles.active=development /app/zuul-service.jar"]
    networks: 
      - cloud-service-net

  order-service:
    build: ./order-service
    restart: always
    image: order-service-image
    container_name: order-service-container
    ports:
      - "8000:8000"        
    depends_on:
      - mongo
      - discovery-service
    entrypoint: ["/bin/sh"]  
    command: ["-c", "/app/wait-for.sh mongo-container:27017 && /app/wait-for.sh discovery-service-container:8761 && java -jar -Dspring.profiles.active=development /app/order-service.jar"]
    networks: 
      - cloud-service-net
      - db

networks:
  cloud-service-net:
  cloud-kafka-net:
  db:      
