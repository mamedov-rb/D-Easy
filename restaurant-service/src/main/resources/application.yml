server.port: 8040

spring:
  output.ansi.enabled: detect
  application.name: restaurant-service
  data.mongodb:
    uri: mongodb://d_easy_user:123qwe@192.168.31.157:27017/d_easy_db?replicaSet=rs0
  servlet.multipart:
   max-file-size: 256MB
   max-request-size: 256MB
   enabled: true

data:
  directory: restaurant-service/src/main/resources/data/media/

kafka:
  receiver:
    bootstrap-servers: 192.168.31.157:9092
    group-id: new-orders-restaurant-service-group
    auto-offset-reset: earliest
  sender:
    bootstrap-servers: ${kafka.receiver.bootstrap-servers}
  topics:
    new-orders-topic:
      enabled: true
      name: new-orders-topic
      partitions: 1
      replicas: 1
    checked-menu-orders-topic:
      name: checked-menu-orders-topic
      partitions: 1
      replicas: 1

hazelcast:
  cache:
    etl-cache-name: restaurant-check-result-cache
    map-name: resturant-check-result-map
    time-to-live: 360
    max-idle-seconds: 180

management:
  health:
    hazelcast:
      enabled: false

#eureka:
#  instance.preferIpAddress: true
#  client:
#    registerWithEureka: true
#    fetchRegistry: true
#    serviceUrl:
#      defaultZone: http://discovery-service:8761/eureka

logging.level:
  root: WARN
  org.springframework:
    web: DEBUG
  com.rmamedov.deasy: INFO
